- Exercise is a verb conjugation form with 6 fillboxes. Each fillbox contains label and the input text
- When current value matches one of the correct answers, show as completed
- Error is typing incorrect letter when previous input was correct so far. Once you typed the wrong letter, you can type anything, and it won't count as an error, until you delete all incorrect letters
- When completed with 1 error max, show as perfect
- When every answer is completed, consider exercise completed
- For the completed exercise, show the final score
- Completed exercise has retry button, allowing to redo the exercise
- Compile elm program into js, bundle with webpack and combine with css
- Show correct completion mark next to fillbox
- When 2 or more errors, show hint
- For every exerices, display verb and tense
- Load exercise data from JS
- Return different exercise data from JS depending on id, and emulate errors from JS
- Exercise has "next" button, allowing to move to the next exercise
- For every exerice, display link to the next one
- Completed exercise has "next" button, allowing to move to the next exercise
- Virtual keyboard
- Set focus on the first field, and on next button when exercise completed (https://stackoverflow.com/questions/31901397/how-to-set-focus-on-an-element-in-elm)
- Prevent spellcheck on inputs in fillbox
- Handle not found when link is completely incorrect, show 404 page
- Render control bar, in case of exercise should contain the link back to all verbs
- Render spinner
- Tense (exercise list and verb conjugator) is a link to the corresponding grammar section
- Render grammar section (first, only for the "presente")
- Retry does not set the focus
- Render progress bar in the verb conjugator control bar
- Report exercise progress update to JS, update the state and send back to the app
- Currently I'm checking that messages are compatible with the state of the model, but messages are async, so might arrive when model is already changed
- --For the "data received" messages, I could check that the id of exercise/list received still matches the one requested, but that seem to be overengineering--
- Keep track of completed exercises and show completion mark in the exercise list
- Save completion in local storage
- Use all 6 verb forms
--------------------------

TODO:
- Extract labels
- Localize
- Add exercise book with all exercise lists
- Add grammar for every list
- Add french exercise book
- Home screen allows to choose which language to practice
- Home screen allows to choose the user language
- Render errors nicely
- Add sitemap
- Every url must have correct and localized meta
- Review https://github.com/hurwitzlab/elm-imicrobe-spa
- ? Handle loading errors differently, depending on the error, potentially adding button to retry loading exercise on certain errors


Webpack references:
- https://github.com/elm-community/elm-webpack-loader
- https://discourse.elm-lang.org/t/optimize-elm-compilation-with-webpack/2191